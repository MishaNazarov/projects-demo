import { isEmpty } from 'lodash'

import { SPINNER } from 'redux/actions'
import {
  GET_HOUSES_USER_REQUEST,
  // GET_HOUSES_USER_FINISHED,
  CHANGE_SETTING_REQUEST,
  // CHANGE_SETTING_FINISHED,
  UPDATE_HOUSE_USER_REQUEST,
  // UPDATE_HOUSE_USER_FINISHED,
  INVITE_USER_REQUEST,
  // INVITE_USER_FINISHED,
  REMOVE_USER_FROM_HOUSE_REQUEST,
  // REMOVE_USER_FROM_HOUSE_FINISHED,
  UPDATE_WORKDAYS_REQUEST,
  // UPDATE_WORKDAYS_FINISHED,
} from 'redux/actions/house'
import {
  GET_DEVICES_REQUEST,
  // GET_DEVICES_FINISHED,
  SET_DEVICE_SELF_TRAINING_REQUEST,
  // SET_DEVICE_SELF_TRAINING_FINISHED,
  SET_DEVICE_SENSOR_TYPE_REQUEST,
  // SET_DEVICE_SENSOR_TYPE_FINISHED,
  CHANGE_DEVICE_SETTING_REQUEST,
  // CHANGE_DEVICE_SETTING_FINISHED,
  UPDATE_DEVICE_CONFIGURATION_REQUEST,
  // UPDATE_DEVICE_CONFIGURATION_FINISHED,
  REMOVE_DEVICE_REQUEST,
  // REMOVE_DEVICE_FINISHED,
} from 'redux/actions/devices'
import {
  GET_GROUPS_REQUEST,
  // GET_GROUPS_FINISHED,
  CREATE_NEW_GROUP_REQUEST,
  // CREATE_NEW_GROUP_FINISHED,
  UPDATE_GROUP_REQUEST,
  // UPDATE_GROUP_FINISHED,
  UPDATE_GROUP_SETTINGS_REQUEST,
  // UPDATE_GROUP_SETTINGS_FINISHED,
  REMOVE_GROUP_REQUEST,
  // REMOVE_GROUP_FINISHED,
} from 'redux/actions/groups'
import {
  GET_HOUSES_REQUEST,
  // GET_HOUSES_FINISHED,
  NEW_HOUSE_REQUEST,
  // NEW_HOUSE_FINISHED,
  REMOVE_HOUSE_REQUEST,
  // REMOVE_HOUSE_FINISHED,
} from 'redux/actions/houses'
import { SIGN_OUT } from 'redux-oauth'
import {
  GET_AUTHENTICATION_KEY_REQUEST,
  // GET_AUTHENTICATION_KEY_FINISHED,
  GET_USER_INFO_REQUEST,
  // GET_USER_INFO_FINISHED,
  UPDATE_USER_INFO_REQUEST,
  // UPDATE_USER_INFO_FINISHED,
  // SIGN_OUT_FINISHED,
  START_REGISTRATION,
} from 'redux/actions'
import {
  GET_METERS_REQUEST,
  // GET_METERS_FINISHED,
  CHANGE_METER_PARAMS_REQUEST,
  // CHANGE_METER_PARAMS_FINISHED,
} from 'redux/actions/meters'
import {
  GET_NETWORKS_REQUEST,
  // GET_NETWORKS_FINISHED,
  ADD_NETWORK_REQUEST,
  // ADD_NETWORK_FINISHED,
  REMOVE_NETWORK_REQUEST,
  // REMOVE_NETWORK_FINISHED,
  UPDATE_NETWORK_REQUEST,
  // UPDATE_NETWORK_FINISHED,
} from 'redux/actions/networks'
import {
  // REGISTRATION_FINISHED,
  CHECK_CONFIRM_CODE_REQUEST,
  // CHECK_CONFIRM_CODE_FINISHED,
} from 'redux/actions/registration'
import {
  SEND_EMAIL_RESET_PASSWORD_REQUEST,
  // SEND_EMAIL_RESET_PASSWORD_FINISHED,
  SEND_NEW_PASSWORD_REQUEST,
  // SEND_NEW_PASSWORD_FINISHED,
  CHANGE_PASSWORD_IN_PROFILE_REQUEST,
  // CHANGE_PASSWORD_IN_PROFILE_FINISHED,
} from 'redux/actions/resetPassword'
import {
  GET_HOUSE_OVERALL_STATISTIC_REQUEST,
  // GET_HOUSE_OVERALL_STATISTIC_FINISHED,
  GET_DEVICE_STATISTIC_REQUEST,
  // GET_DEVICE_STATISTIC_FINISHED,
} from 'redux/actions/statistic'

// const TYPES_TO_SHOW_SPINNER = [
//   GET_HOUSES_USER_REQUEST,
//   CHANGE_SETTING_REQUEST,
//   UPDATE_HOUSE_USER_REQUEST,
//   INVITE_USER_REQUEST,
//   REMOVE_USER_FROM_HOUSE_REQUEST,
//   UPDATE_WORKDAYS_REQUEST,
//   GET_DEVICES_REQUEST,
//   SET_DEVICE_SELF_TRAINING_REQUEST,
//   SET_DEVICE_SENSOR_TYPE_REQUEST,
//   CHANGE_DEVICE_SETTING_REQUEST,
//   UPDATE_DEVICE_CONFIGURATION_REQUEST,
//   REMOVE_DEVICE_REQUEST,
//   GET_GROUPS_REQUEST,
//   CREATE_NEW_GROUP_REQUEST,
//   UPDATE_GROUP_REQUEST,
//   UPDATE_GROUP_SETTINGS_REQUEST,
//   REMOVE_GROUP_REQUEST,
//   GET_HOUSES_REQUEST,
//   NEW_HOUSE_REQUEST,
//   REMOVE_HOUSE_REQUEST,
//   SIGN_OUT,
//   GET_AUTHENTICATION_KEY_REQUEST,
//   GET_USER_INFO_REQUEST,
//   UPDATE_USER_INFO_REQUEST,
//   GET_METERS_REQUEST,
//   CHANGE_METER_PARAMS_REQUEST,
//   GET_NETWORKS_REQUEST,
//   ADD_NETWORK_REQUEST,
//   REMOVE_NETWORK_REQUEST,
//   UPDATE_NETWORK_REQUEST,
//   START_REGISTRATION,
//   CHECK_CONFIRM_CODE_REQUEST,
//   SEND_EMAIL_RESET_PASSWORD_REQUEST,
//   SEND_NEW_PASSWORD_REQUEST,
//   CHANGE_PASSWORD_IN_PROFILE_REQUEST,
//   GET_HOUSE_OVERALL_STATISTIC_REQUEST,
//   GET_DEVICE_STATISTIC_REQUEST,
// ]
// const TYPES_TO_HIDE_SPINNER = [
//   GET_HOUSES_USER_FINISHED,
//   CHANGE_SETTING_FINISHED,
//   UPDATE_HOUSE_USER_FINISHED,
//   INVITE_USER_FINISHED,
//   REMOVE_USER_FROM_HOUSE_FINISHED,
//   UPDATE_WORKDAYS_FINISHED,
//   GET_DEVICES_FINISHED,
//   SET_DEVICE_SELF_TRAINING_FINISHED,
//   SET_DEVICE_SENSOR_TYPE_FINISHED,
//   CHANGE_DEVICE_SETTING_FINISHED,
//   UPDATE_DEVICE_CONFIGURATION_FINISHED,
//   REMOVE_DEVICE_FINISHED,
//   GET_GROUPS_FINISHED,
//   CREATE_NEW_GROUP_FINISHED,
//   UPDATE_GROUP_FINISHED,
//   UPDATE_GROUP_SETTINGS_FINISHED,
//   REMOVE_GROUP_FINISHED,
//   GET_HOUSES_FINISHED,
//   NEW_HOUSE_FINISHED,
//   REMOVE_HOUSE_FINISHED,
//   GET_AUTHENTICATION_KEY_FINISHED,
//   GET_USER_INFO_FINISHED,
//   UPDATE_USER_INFO_FINISHED,
//   SIGN_OUT_FINISHED,
//   GET_METERS_FINISHED,
//   CHANGE_METER_PARAMS_FINISHED,
//   GET_NETWORKS_FINISHED,
//   ADD_NETWORK_FINISHED,
//   REMOVE_NETWORK_FINISHED,
//   UPDATE_NETWORK_FINISHED,
//   REGISTRATION_FINISHED,
//   CHECK_CONFIRM_CODE_FINISHED,
//   SEND_EMAIL_RESET_PASSWORD_FINISHED,
//   SEND_NEW_PASSWORD_FINISHED,
//   CHANGE_PASSWORD_IN_PROFILE_FINISHED,
//   GET_HOUSE_OVERALL_STATISTIC_FINISHED,
//   GET_DEVICE_STATISTIC_FINISHED,
// ]

const REQUESTS = [
  GET_HOUSES_USER_REQUEST,
  CHANGE_SETTING_REQUEST,
  UPDATE_HOUSE_USER_REQUEST,
  INVITE_USER_REQUEST,
  REMOVE_USER_FROM_HOUSE_REQUEST,
  UPDATE_WORKDAYS_REQUEST,
  GET_DEVICES_REQUEST,
  SET_DEVICE_SELF_TRAINING_REQUEST,
  SET_DEVICE_SENSOR_TYPE_REQUEST,
  CHANGE_DEVICE_SETTING_REQUEST,
  UPDATE_DEVICE_CONFIGURATION_REQUEST,
  REMOVE_DEVICE_REQUEST,
  GET_GROUPS_REQUEST,
  CREATE_NEW_GROUP_REQUEST,
  UPDATE_GROUP_REQUEST,
  UPDATE_GROUP_SETTINGS_REQUEST,
  REMOVE_GROUP_REQUEST,
  GET_HOUSES_REQUEST,
  NEW_HOUSE_REQUEST,
  REMOVE_HOUSE_REQUEST,
  SIGN_OUT,
  GET_AUTHENTICATION_KEY_REQUEST,
  GET_USER_INFO_REQUEST,
  UPDATE_USER_INFO_REQUEST,
  GET_METERS_REQUEST,
  CHANGE_METER_PARAMS_REQUEST,
  GET_NETWORKS_REQUEST,
  ADD_NETWORK_REQUEST,
  REMOVE_NETWORK_REQUEST,
  UPDATE_NETWORK_REQUEST,
  START_REGISTRATION,
  CHECK_CONFIRM_CODE_REQUEST,
  SEND_EMAIL_RESET_PASSWORD_REQUEST,
  SEND_NEW_PASSWORD_REQUEST,
  CHANGE_PASSWORD_IN_PROFILE_REQUEST,
  GET_HOUSE_OVERALL_STATISTIC_REQUEST,
  GET_DEVICE_STATISTIC_REQUEST,
]


// import { REQUEST, PENDING } from 'redux/reducers/request'
import { REQUEST } from 'redux/reducers/request'

export const spinner = ({ dispatch, getState }) => next => action => {
  // console.log(`Тип события: ${action.type} , дополнительные данные события:`, action)
  // if (TYPES_TO_SHOW_SPINNER.indexOf(action.type) !== -1) {
  //   store.dispatch({ type: SPINNER, shown: true })
  // }
  // else if (TYPES_TO_HIDE_SPINNER.indexOf(action.type) !== -1) {
  //   store.dispatch({ type: SPINNER, shown: false })
  // }

  if (REQUESTS.indexOf(action.type) !== -1) {
    dispatch({ type: REQUEST, request: action.type, status: action.status, key: action.key })

    const shown = !isEmpty(getState().request || {})

    if (getState().spinner.shown !== shown) {
      dispatch({ type: SPINNER, shown })
    }
  }

  return next(action)
}
